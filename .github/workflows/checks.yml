name: Checks
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  scalafmt:
    name: Scalafmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: sbt scalafmtCheckAll
  docs:
    name: Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0      
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: sbt 'docs/mdoc'
  # Note that the first Scala LTS 3.3 is unfortunately not compatible
  # So we consider 3.2.2 as our baseline until we get a LTS we
  # can target.
  test-base:
    name: Test (3.2.2)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: sbt test
  # We still want to be able to test out the library on newer Scala version.
  # For those version, we compile the library using 3.2 and then run the tests
  # against the newer version. This effectively emulate what our users are doing.
  test-integration:
    name: Integration Test (${{ matrix.scalaV }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scalaV:
          - "3.3.3"
          - "3.4.2"
          - "3.5.0-RC2"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: |
          sbt 'core/publishLocal'
          sbt '++${{ matrix.scalaV }}! integration/test'
